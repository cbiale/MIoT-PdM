/*
 * API_bmp280.c
 *
 *  Implementa las funciones que manejan el sensor BMP280.
 *  Created on: Dec 4, 2023
 *      Author: cbiale
 */


/*
 * Voltage utilizado (VCC) de 3.3 volts.
 *
 * El pin SCL y SDA permiten la comunicación mediante I2C o SPI.
 *
 * El pin CSB permite definir que protocolo se usa
 * - Conectando a GND se define el uso del protocolo SPI.
 * - Conectando a VCC se define el uso del protocolo I2C.
 *
 * El pin SDO solo se utiliza con I2C:
 * - Si se pasa un 0 establece la dirección en 0x76.
 * - Si se pasa un 1 establece la dirección en 0x77.
 *
 * El protocolo por defecto es I2c con la dirección en 0x76.
 * (Se usa en la biblioteca este protocolo y dirección).
 */

#define I2C_DIRECCION_BMP280 0x76 // direccion I2C del BMP280
#define BMP280_ESPERA        ((uint32_t)0x00000000U) // genera cond. de parada


void bmp280_iniciar() {

}

void bmp280_leer(float * temperatura, float * presion) {

}


static void bmp280_escribir_registro (uint8_t registro, uint8_t valor) {
	uint8_t datos[2] = { registro, valor };
	I2C_transmitir(I2C_DIRECCION_BMP280, datos, sizeof(datos), BMP280_ESPERA);
}

static uint8_t bmp280_leer_registro (uint8_t registro) {
	uint8_t valor = 0;
	I2C_transmitir(I2C_DIRECCION_BMP280, &registro, 1, BMP280_ESPERA);
	I2C_recibir(I2C_DIRECCION_BMP280, &valor, 1);
	return valor;
}
